{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\my-app\\\\src\\\\components\\\\forms\\\\registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [userRegistration, setUserRegistration] = useState({\n    fullname: \"\",\n    email: \"\",\n    mobile: \"\",\n    password: \"\"\n  });\n  const [record, setRecord] = useState([]);\n  const handleInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUserRegistration({\n      ...userRegistration,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newRecord = {\n      ...userRegistration,\n      id: new Date().getTime().toString()\n    };\n    setRecord([...record, newRecord]);\n    setUserRegistration({\n      fullname: \"\",\n      email: \"\",\n      mobile: \"\",\n      password: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Registration, \"bBkSZlKamMLntACXqk84sAwlIcU=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","Button","Registration","userRegistration","setUserRegistration","fullname","email","mobile","password","record","setRecord","handleInput","e","name","target","value","handleSubmit","preventDefault","newRecord","id","Date","getTime","toString"],"sources":["C:/wamp64/www/my-app/src/components/forms/registration.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Registration = () => {\r\n\r\n\t\r\n\tconst [userRegistration, setUserRegistration] = useState({\r\n\t\tfullname:\"\",\r\n\t\temail:\"\",\r\n\t\tmobile:\"\",\r\n\t\tpassword:\"\"\r\n\t});\r\n\r\n\tconst [record, setRecord] = useState([]);\r\n\r\n\tconst handleInput = (e) => {\t\r\n\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetUserRegistration({...userRegistration, [name] : value});\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\r\n\t\t\te.preventDefault();\r\n\t\t\tconst newRecord = { ...userRegistration, id: new Date().getTime().toString() }\r\n\r\n\t\t\tsetRecord([...record, newRecord])\r\n\r\n\t\t\tsetUserRegistration({fullname:\"\", email:\"\", mobile:\"\", password:\"\"})\r\n\t}\r\n\r\n\t\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Form>\r\n\t\t\t      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n\t\t\t        <Form.Label>Email address</Form.Label>\r\n\t\t\t        <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n\t\t\t        <Form.Text className=\"text-muted\">\r\n\t\t\t          We'll never share your email with anyone else.\r\n\t\t\t        </Form.Text>\r\n\t\t\t      </Form.Group>\r\n\r\n\t\t\t      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n\t\t\t        <Form.Label>Password</Form.Label>\r\n\t\t\t        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n\t\t\t      </Form.Group>\r\n\t\t\t      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n\t\t\t        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n\t\t\t      </Form.Group>\r\n\t\t\t      <Button variant=\"primary\" type=\"submit\">\r\n\t\t\t        Submit\r\n\t\t\t      </Button>\r\n\t\t\t    </Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Registration"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAAA;AAE5C,MAAMC,YAAY,GAAG,MAAM;EAAA;EAG1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGJ,QAAQ,CAAC;IACxDK,QAAQ,EAAC,EAAE;IACXC,KAAK,EAAC,EAAE;IACRC,MAAM,EAAC,EAAE;IACTC,QAAQ,EAAC;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,WAAW,GAAIC,CAAC,IAAK;IAE1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACD,IAAI;IAC1B,MAAME,KAAK,GAAGH,CAAC,CAACE,MAAM,CAACC,KAAK;IAE5BX,mBAAmB,CAAC;MAAC,GAAGD,gBAAgB;MAAE,CAACU,IAAI,GAAIE;IAAK,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IAE1BA,CAAC,CAACK,cAAc,EAAE;IAClB,MAAMC,SAAS,GAAG;MAAE,GAAGf,gBAAgB;MAAEgB,EAAE,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAACC,QAAQ;IAAG,CAAC;IAE9EZ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAES,SAAS,CAAC,CAAC;IAEjCd,mBAAmB,CAAC;MAACC,QAAQ,EAAC,EAAE;MAAEC,KAAK,EAAC,EAAE;MAAEC,MAAM,EAAC,EAAE;MAAEC,QAAQ,EAAC;IAAE,CAAC,CAAC;EACtE,CAAC;EAGD,oBACC;IAAA,uBACC,QAAC,IAAI;MAAA,wBACC,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,SAAS,EAAC,gBAAgB;QAAA,wBACrD,QAAC,IAAI,CAAC,KAAK;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAa,eACtC,QAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,WAAW,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,eACvD,QAAC,IAAI,CAAC,IAAI;UAAC,SAAS,EAAC,YAAY;UAAA,UAAC;QAElC;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QACD,eAEb,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,SAAS,EAAC,mBAAmB;QAAA,wBACxD,QAAC,IAAI,CAAC,KAAK;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAa,eACjC,QAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C,eACb,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAC,SAAS,EAAC,mBAAmB;QAAA,uBACxD,QAAC,IAAI,CAAC,KAAK;UAAC,IAAI,EAAC,UAAU;UAAC,KAAK,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACxC,eACb,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACT;AAEL,CAAC;AAAA,GAvDKN,YAAY;AAAA,KAAZA,YAAY;AAyDlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}